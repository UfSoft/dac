<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
          xmlns:conversions="org.ufsoft.baca.conversions.*"
          layout="vertical"
          width="100%"
          height="50%"
          title="{resourceManager.getString('baca', 'Conversion Queue')}"
          creationComplete="creationComplete(event)">

  <mx:Script>
  <![CDATA[

    import org.osflash.thunderbolt.Logger;

    import mx.core.Application;
    import mx.events.FlexEvent;
    import mx.collections.ArrayCollection;
    import mx.messaging.Consumer;
    import mx.messaging.events.MessageEvent;
    import mx.messaging.events.MessageFaultEvent;
    import org.ufsoft.baca.events.*;
    import org.ufsoft.baca.conversions.Conversion;
    import org.ufsoft.baca.i18n.*;

    private var consumer:Consumer;

    [Bindable]
    private var conversions:ArrayCollection;

    private function creationComplete(event:FlexEvent):void {
      conversions = new ArrayCollection();

      Application.application.addEventListener(ApplicationEvent.RUNNING, applicationIsRunning);
      Application.application.addEventListener(ConnectionEvent.CONNECTED, handleConnectionEvent);
      Application.application.addEventListener(ConnectionEvent.DISCONNECTED, handleConnectionEvent);
      Application.application.addEventListener(ConnectionEvent.CONNECTING, handleConnectionEvent);
      Application.application.addEventListener(ConnectionEvent.RECONNECTING, handleConnectionEvent);
      Application.application.addEventListener(QueueEvent.LIST, handleQueueEvent);

    }

    private function applicationIsRunning(event:ApplicationEvent):void {
      Logger.info("ApplicationEvent.RUNNING caught creating consumer");
      consumer = Application.application.getConsumer('conversions', 'new');
      consumer.addEventListener(MessageEvent.MESSAGE, newConversionEvent);
      consumer.subscribe();
    }

    private function handleConnectionEvent(event:ConnectionEvent):void {
      if ( event.type == ConnectionEvent.CONNECTED ) {
        // get all conversions
        Logger.debug("CQP - handleConnectionEvent - queryQueueContents()", String(event));
        Application.application.queryQueueContents();
      } else {
        Logger.debug("CQP - handleConnectionEvent - ELSE", String(event));
        // Lost connection, remove all from queue
        conversions.removeAll();
      }
    }

    private function newConversionEvent(event:MessageEvent):void {
      Application.application.queryQueueContents();
      var conversion:Conversion = event.message.body as Conversion;
      Logger.debug("ConvertQueuePanel newConversion conversion", String(conversion));
      var existingIDs:Array = new Array();
      for ( var i:Number=0; i < conversions.length; i++ ) {
        existingIDs.push(conversions.getItemAt(i).id);
      }
      Logger.debug("Existing IDS", String(existingIDs), String(conversion.id));
      if ( existingIDs.indexOf(conversion.id) == -1 ) {
        conversions.addItem(conversion);
        conversions.itemUpdated(conversion);
        Logger.debug("ConvertQueuePanel newConversion added", String(conversions), String(conversion));
      }
      Logger.info("conversions to array", conversions.toArray(), conversions.toArray().indexOf(conversion.id));
    }

    private function handleQueueEvent(event:QueueEvent):void {
      Logger.debug("Catched QUEUE event", String(event), String(event.conversions));
      conversions = event.conversions;
    }

  ]]>
  </mx:Script>

  <mx:VBox id="conversionsVB" width="100%" height="100%" >
    <mx:Repeater id="conversionsRepeater" dataProvider="{conversions}" recycleChildren="true">
      <conversions:ConversionUI conversion="{conversionsRepeater.currentItem}"/>
    </mx:Repeater>
  </mx:VBox>
  <mx:ControlBar visible="false">
    <mx:ProgressBar id="downloadsProgress" width="100%"/>
  </mx:ControlBar>
</mx:Panel>
